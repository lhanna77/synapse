{
	"name": "Read and Writes connections",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "LHSparkPool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8e0536d4-2b0b-4251-9fde-82a23471f378"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/05174b2b-36c5-447e-a3b3-c8f02ccb85dc/resourceGroups/lh-synapse-rg/providers/Microsoft.Synapse/workspaces/lh-synapse-ws/bigDataPools/LHSparkPool",
				"name": "LHSparkPool",
				"type": "Spark",
				"endpoint": "https://lh-synapse-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/LHSparkPool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"# prerequisites\r\n",
					"\r\n",
					"# 1. Create secondary gen2 storage account\r\n",
					"# 2. Add \"Storage Blob Data Contributor\" role to gen2 storage account\r\n",
					"# 3. Create linked service"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"<mark>**Part 1: Read/Write data using secondary ADLS account (Linked Service)**</mark>"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import pandas as pd"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage account details\r\n",
					"\r\n",
					"account_name = \"lhadlsgen2storagesec\"\r\n",
					"file_system_name = \"main-container\"\r\n",
					"linked_service_name = \"AzureDataLakeGen2Storage\"\r\n",
					"input_file_path = \"/nb/input/employee_data.csv\"  # Make sure to include the leading slash"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage string\r\n",
					"storage_connection = f\"abfs://{file_system_name}@{account_name}.dfs.core.windows.net\"\r\n",
					"\r\n",
					"# Read data file\r\n",
					"df = pd.read_csv(\r\n",
					"    f\"{storage_connection}{input_file_path}\",\r\n",
					"    storage_options={\"account_name\": account_name, \"linked_service\": linked_service_name},\r\n",
					")\r\n",
					"print(df)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"output_file_path = \"/output/emp_names.csv\"  # Make sure to include the leading slash"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Write data file\r\n",
					"\r\n",
					"data = pd.DataFrame({'Name':['Anna', 'Jack', 'Emma', 'Luke'], 'ID':[20, 21, 19, 18]})\r\n",
					"data.to_csv(\r\n",
					"    f\"{storage_connection}{output_file_path}\",\r\n",
					"    storage_options={\"account_name\": account_name, \"linked_service\": linked_service_name},\r\n",
					"    index=False,\r\n",
					")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"<mark>**Part 2: Read/Write data using secondary ADLS account (sas token)**</mark>"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage account details\r\n",
					"sas_token = 'sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2024-01-11T08:05:15Z&st=2024-01-11T00:05:15Z&spr=https&sig=J9SquQkC2v0jPHhYKpoAnF%2FV7z2j6e%2FPbQiIpElp4Sc%3D'"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage string\r\n",
					"storage_connection = f\"abfs://{file_system_name}@{account_name}.dfs.core.windows.net\"\r\n",
					"\r\n",
					"# Read data file\r\n",
					"df = pd.read_csv(\r\n",
					"    f\"{storage_connection}{file_path}\",\r\n",
					"    storage_options={'account_name': account_name, 'sas_token': sas_token},\r\n",
					")\r\n",
					"print(df)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"output_file_path = \"/output/emp_names2.csv\"  # Make sure to include the leading slash"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Write data file\r\n",
					"data = pd.DataFrame({'Name':['Anna', 'Jack', 'Emma', 'Luke'], 'ID':[20, 21, 19, 18]})\r\n",
					"data.to_csv(\r\n",
					"    f\"{storage_connection}{output_file_path}\",\r\n",
					"    storage_options={\"account_name\": account_name, 'sas_token': sas_token},\r\n",
					"    index=False,\r\n",
					")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"<mark>**Part 3: Read/Write data using secondary ADLS account (connection string)**</mark>"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage account details\r\n",
					"connection_string = 'BlobEndpoint=https://secondarygen2storage267.blob.core.windows.net/;QueueEndpoint=https://secondarygen2storage267.queue.core.windows.net/;FileEndpoint=https://secondarygen2storage267.file.core.windows.net/;TableEndpoint=https://secondarygen2storage267.table.core.windows.net/;SharedAccessSignature=sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupyx&se=2024-01-11T08:13:48Z&st=2024-01-11T00:13:48Z&spr=https&sig=NXsxG4XSGKdq2bfJCoa5xcG%2FFBpkTyKG1XZR72h%2BlCM%3D'\r\n",
					""
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Define the storage string\r\n",
					"storage_connection = f\"abfs://{file_system_name}@{account_name}.dfs.core.windows.net\"\r\n",
					"\r\n",
					"# Read data file\r\n",
					"df = pd.read_csv(\r\n",
					"    f\"{storage_connection}{input_file_path}\",\r\n",
					"    storage_options={'account_name': account_name, 'connection_string': connection_string},\r\n",
					")\r\n",
					"print(df)"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"output_file_path = \"/output/emp_names3.csv\"  # Make sure to include the leading slash"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Write data file\r\n",
					"data = pd.DataFrame({'Name':['Anna', 'Jack', 'Emma', 'Luke'], 'ID':[20, 21, 19, 18]})\r\n",
					"data.to_csv(\r\n",
					"    f\"{storage_connection}{output_file_path}\",\r\n",
					"    storage_options={\"account_name\": account_name, 'connection_string': connection_string},\r\n",
					"    index=False,\r\n",
					")"
				],
				"execution_count": 15
			}
		]
	}
}